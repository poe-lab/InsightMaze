3:30PM

-I got the main code to work
-Test door code will not compile
-Serial Monitor is not working (code works when commented out)

3:50PM

Decided it must be some error that I made that it would be faster to start from scratch

-Deleted old MockMaze_run file and made a new sketch

-Serial monitor is now working 

-All of code is now working 
	for code I removed "test doors" and only made an 
	initial all doors close code after door set-up.
	
	the goal of this code is to make sure all doors begin
	in the close position no matter where the run ended.
-Serial pasted below (does not include all doors closed code)

d0|d1|d2|d3|d4|d5
0  0  0  0  0  0 // d0 remains closed
0  0  0  0  0  0 // d1 remains closed
0  0  0  1  0  0 // d3 opens
0  0  1  1  0  0 // d2 opens *should change this so d3 closes
0  0  1  1  1  0 // d4 opens *should change this so d2 closes
0  0  1  1  1  1 // d5 opens *should change this so d4 closes
all doors close code
0  0  0  1  0  0 // d3 opens
0  0  1  1  0  0 // d2 opens *should change this so d3 closes
1  0  1  1  0  0 // d0 opens *should change this so d2 closes
1  1  1  1  0  0 // d1 opens *should change this so d2 closes
0  0  0  0  0  0 

4:01PM

I added printDoorsStates(); to close all doors within the loop
	initial all doors closed (before loop) still does not have print states

4:15PM

I added *code written above so that doors behind the imaginary animal closes

I realized I've been looking at the Maze as if the animal enters from d3 when they would actually
enter from s0 and s2 region so I will need to rewrite this code for that.

renamed inverse file MockMaze_run_inverse
	 
4:40PM

Wrote a new code that is in the proper orientation (MockMaze_run)
	choice order: (R) -> (C) -> (L)

Serial Monitor record below

d0|d1|d2|d3|d4|d5
0  0  0  0  1  0 // d4 opens (R)
0  0  0  0  0  0 // d4 closes
0  0  0  0  0  1 // d5 opens continued right
0  0  0  0  0  0 // all doors close
0  0  1  0  0  0 // d2 opens (C)
0  0  0  0  0  0 // d2 closes
0  0  0  1  0  0 // d3 opens continued center
0  0  0  0  0  0 // all doors close
1  0  0  0  0  0 // d0 opens (L)
0  0  0  0  0  0 // d0 closes
0  1  0  0  0  0 // d1 opens continued left
0  1  0  0  1  0 // d1 and d4 are open *not sure what is happening here - I think I need all doors closed after d1
0  1  0  0  0  0 // d4 closes *d1 is still open
0  1  0  0  0  1 // d5 opens  *d1 is still open
0  0  0  0  0  0 // all doors close
0  0  1  0  0  0 // d2 opens (C)
0  0  0  0  0  0 // d2 closes
0  0  0  1  0  0 // d3 opens continued center
0  0  0  0  0  0 // all doors close
1  0  0  0  0  0 // d0 opens (L)
0  0  0  0  0  0 // d0 closes
0  1  0  0  0  0 // d1 opens continued (L)

4/09/19

* included close door 1 at end of loop	